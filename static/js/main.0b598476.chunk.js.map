{"version":3,"sources":["components/ProductsDisplay.js","containers/Cart.js","actions/getActions.js","actions/types.js","containers/Main.js","actions/addAction.js","product-data.js","reducers/cartReducer.js","reducers/index.js","store.js","App.js","serviceWorker.js","index.js"],"names":["ProductsDisplay","dataToDisplay","this","props","className","Component","Cart","console","log","products_in_cart","cartProps","map","product","i","cartNumber","connect","state","cartState","getCart","dispatch","type","Main","data","addCart","key","src","product_image","alt","product_name","onClick","payload","id","product_price","initialState","combineReducers","action","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.0b598476.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nclass ProductsDisplay extends Component {\r\n  render() {\r\n    const { dataToDisplay } = this.props;\r\n    return <div className='products_container'>{dataToDisplay}</div>;\r\n  }\r\n}\r\n\r\nexport default ProductsDisplay;\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { getCart } from '../actions/getActions';\r\n\r\nclass Cart extends Component {\r\n  render() {\r\n    console.log(this.props);\r\n    const products_in_cart = this.props.cartProps.products_in_cart.map(\r\n      (product, i) => <h3 className='product_name_in_cart'>{product}</h3>\r\n    );\r\n    return (\r\n      <div className='cart_container'>\r\n        <h1>Cart</h1>\r\n        <h2>Items in Cart</h2>\r\n        <span>{this.props.cartProps.cartNumber}</span>\r\n        <div className='products_in_cart'> {products_in_cart} </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  cartProps: state.cartState,\r\n});\r\n\r\nexport default connect(mapStateToProps, { getCart })(Cart);\r\n","import { GET_PRODUCT_CART } from './types';\r\n\r\nexport const getCart = () => {\r\n  return (dispatch) => {\r\n    console.log('Getting from Cart');\r\n    dispatch({\r\n      type: GET_PRODUCT_CART,\r\n    });\r\n  };\r\n};\r\n","export const ADD_PRODUCT_CART = 'ADD_PRODUCT_CART';\r\nexport const GET_PRODUCT_CART = 'GET_PRODUCT_CART';\r\n","import React, { Component } from 'react';\r\nimport ProductsDisplay from '../components/ProductsDisplay';\r\nimport Cart from './Cart';\r\nimport { connect } from 'react-redux';\r\nimport { addCart } from '../actions/addAction';\r\n\r\nclass Main extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n\r\n  render() {\r\n    const { data, addCart } = this.props;\r\n\r\n    const dataToDisplay = data.map((product, i) => (\r\n      <div className='product' key={i}>\r\n        <img src={product.product_image} alt='Product Img' />\r\n        <h3 className='product_title'>{product.product_name}</h3>\r\n        <button onClick={() => addCart(product.product_name)}>\r\n          Add to Cart\r\n        </button>\r\n      </div>\r\n    ));\r\n\r\n    console.log(this.props);\r\n    return (\r\n      <div>\r\n        <div className='products_and_cart_container'>\r\n          <ProductsDisplay dataToDisplay={dataToDisplay} />\r\n          <Cart />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(null, { addCart })(Main);\r\n","import { ADD_PRODUCT_CART } from './types';\r\n\r\nexport const addCart = (product_name) => {\r\n  return (dispatch) => {\r\n    console.log('Added to Cart');\r\n    console.log('Product: ', product_name);\r\n    dispatch({\r\n      type: ADD_PRODUCT_CART,\r\n      payload: product_name,\r\n    });\r\n  };\r\n};\r\n","var data = [\n  {\n    id: 1,\n    product_name: 'Turnip - Mini',\n    product_price: '$5.40',\n    product_image: 'http://dummyimage.com/220x220.png/dddddd/000000',\n  },\n  {\n    id: 2,\n    product_name: 'Island Oasis - Strawberry',\n    product_price: '$13.19',\n    product_image: 'http://dummyimage.com/220x220.png/ff4444/ffffff',\n  },\n  {\n    id: 3,\n    product_name: 'Cheese - Ricotta',\n    product_price: '$1.08',\n    product_image: 'http://dummyimage.com/220x220.png/5fa2dd/000000',\n  },\n  {\n    id: 4,\n    product_name: 'Potatoes - Peeled',\n    product_price: '$14.18',\n    product_image: 'http://dummyimage.com/220x220.png/dddddd/000000',\n  },\n  {\n    id: 5,\n    product_name: 'Truffle Cups - Brown',\n    product_price: '$6.26',\n    product_image: 'http://dummyimage.com/220x220.png/cc0000/ffffff',\n  },\n  {\n    id: 6,\n    product_name: 'Puree - Kiwi',\n    product_price: '$13.41',\n    product_image: 'http://dummyimage.com/220x220.png/dddddd/000000',\n  },\n  {\n    id: 7,\n    product_name: 'Lemonade - Island Tea, 591 Ml',\n    product_price: '$10.17',\n    product_image: 'http://dummyimage.com/220x220.png/dddddd/000000',\n  },\n  {\n    id: 8,\n    product_name: 'Coffee - 10oz Cup 92961',\n    product_price: '$5.93',\n    product_image: 'http://dummyimage.com/220x220.png/dddddd/000000',\n  },\n  {\n    id: 9,\n    product_name: 'Beef - Kobe Striploin',\n    product_price: '$0.17',\n    product_image: 'http://dummyimage.com/220x220.png/ff4444/ffffff',\n  },\n  {\n    id: 10,\n    product_name: 'Pasta - Canelloni',\n    product_price: '$4.12',\n    product_image: 'http://dummyimage.com/220x220.png/5fa2dd/ffffff',\n  },\n  {\n    id: 11,\n    product_name: 'Quinoa',\n    product_price: '$13.48',\n    product_image: 'http://dummyimage.com/220x220.png/5fa2dd/ffffff',\n  },\n  {\n    id: 12,\n    product_name: 'Juice - Ocean Spray Cranberry',\n    product_price: '$9.95',\n    product_image: 'http://dummyimage.com/220x220.png/5fa2dd/ffffff',\n  },\n  {\n    id: 13,\n    product_name: 'Pepper Squash',\n    product_price: '$1.86',\n    product_image: 'http://dummyimage.com/220x220.png/5fa2dd/ffffff',\n  },\n  {\n    id: 14,\n    product_name: 'Cabbage - Green',\n    product_price: '$8.93',\n    product_image: 'http://dummyimage.com/220x220.png/cc0000/ffffff',\n  },\n  {\n    id: 15,\n    product_name: 'Pomello',\n    product_price: '$2.61',\n    product_image: 'http://dummyimage.com/220x220.png/cc0000/ffffff',\n  },\n  {\n    id: 16,\n    product_name: 'Squ\"id\" U5 - Thailand',\n    product_price: '$2.34',\n    product_image: 'http://dummyimage.com/220x220.png/5fa2dd/ffffff',\n  },\n  {\n    id: 17,\n    product_name: 'Chestnuts - Whole,canned',\n    product_price: '$9.33',\n    product_image: 'http://dummyimage.com/220x220.png/cc0000/ffffff',\n  },\n  {\n    id: 18,\n    product_name: 'Nestea - Ice Tea, Diet',\n    product_price: '$11.86',\n    product_image: 'http://dummyimage.com/220x220.png/cc0000/ffffff',\n  },\n  {\n    id: 19,\n    product_name: 'Melon - Watermelon, Seedless',\n    product_price: '$1.14',\n    product_image: 'http://dummyimage.com/220x220.png/dddddd/000000',\n  },\n  {\n    id: 20,\n    product_name: 'Pork Loin Cutlets',\n    product_price: '$6.10',\n    product_image: 'http://dummyimage.com/220x220.png/ff4444/ffffff',\n  },\n];\n\nexport default data;\n","import { ADD_PRODUCT_CART, GET_PRODUCT_CART } from '../actions/types';\r\n\r\nconst initialState = {\r\n  cartNumber: 0,\r\n  products_in_cart: [],\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case ADD_PRODUCT_CART:\r\n      return {\r\n        cartNumber: state.cartNumber + 1,\r\n        products_in_cart: [...state.products_in_cart, action.payload],\r\n      };\r\n    case GET_PRODUCT_CART:\r\n      return {\r\n        ...state,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { combineReducers } from 'redux';\r\nimport cartReducer from './cartReducer';\r\n\r\nexport default combineReducers({\r\n  cartState: cartReducer,\r\n});\r\n","import { createStore, applyMiddleware } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from './reducers';\r\n\r\nconst initialState = {};\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  initialState,\r\n  composeWithDevTools(applyMiddleware(...middleware))\r\n);\r\n\r\nexport default store;\r\n","import React from 'react';\nimport './App.css';\nimport Main from './containers/Main';\nimport data from './product-data.js';\nimport { Provider } from 'react-redux';\nimport store from './store';\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <div className='App'>\n        <Main data={data} />\n      </div>\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}